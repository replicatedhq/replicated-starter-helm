apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-preflight-job"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/show-output": "true"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
spec:
  backoffLimit: 0  # do not retry on failure
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      volumes:
        - name: preflights
          configMap:
            name: "{{ .Release.Name }}-preflight-config"
      containers:
      - name: pre-install-job
        image: "{{ .Values.preflight.image }}"
        command: ["preflight", "--interactive=false",  "/preflights/preflight.yaml"]
        volumeMounts:
        - name: preflights
          mountPath: /preflights
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  name: "{{ .Release.Name }}-preflight-config"
data:
  preflight.yaml: |-
{{ include "preflight.spec" . | indent 4 }}
